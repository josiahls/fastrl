# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/20d_qlearning.dqn_double.ipynb (unless otherwise specified).

__all__ = ['DoubleDQNTrainer']

# Cell
import torch.nn.utils as nn_utils
from fastai.torch_basics import *
from fastai.data.all import *
from fastai.basics import *
from dataclasses import field,asdict
from typing import List,Any,Dict,Callable
from collections import deque
import gym
import torch.multiprocessing as mp
from torch.optim import *

from ..data import *
from ..async_data import *
from ..basic_agents import *
from ..learner import *
from ..metrics import *
from ..ptan_extension import *
from .dqn import *
from .dqn_target import *

if IN_NOTEBOOK:
    from IPython import display
    import PIL.Image

# Cell
class DoubleDQNTrainer(TargetDQNTrainer):
    def get_next_state_values(self,sp):
        next_state_actions=self.learn.model(sp).max(1)[1]
        return self.learn.target_model(sp).gather(1, next_state_actions.unsqueeze(-1)).squeeze(-1)