# AUTOGENERATED BY NBDEV! DO NOT EDIT!

__all__ = ["index", "modules", "custom_doc_links", "git_url"]

index = {"fastrl_make_requirements": "00_core.ipynb",
         "map_dict_ex": "00_core.ipynb",
         "D": "00_core.ipynb",
         "tensor2shape": "00_core.ipynb",
         "tensor2mu": "00_core.ipynb",
         "tensor2mu.__docs__": "00_core.ipynb",
         "TensorBatch": "00_core.ipynb",
         "obj2tensor": "00_core.ipynb",
         "BD": "00_core.ipynb",
         "test_in": "00_core.ipynb",
         "test_len": "00_core.ipynb",
         "test_lt": "00_core.ipynb",
         "run_tensorboard": "00_core.ipynb",
         "dependencies": "00_nbdev_extension.ipynb",
         "create_conda_yaml": "00_nbdev_extension.ipynb",
         "create_conda_yamls": "00_nbdev_extension.ipynb",
         "defaults.benchmark": "02a_fastai.torch_core.ipynb",
         "setup_cuda": "02a_fastai.torch_core.ipynb",
         "subplots": "02a_fastai.torch_core.ipynb",
         "show_image": "02a_fastai.torch_core.ipynb",
         "show_titled_image": "02a_fastai.torch_core.ipynb",
         "show_images": "02a_fastai.torch_core.ipynb",
         "ArrayBase": "02a_fastai.torch_core.ipynb",
         "ArrayImageBase": "02a_fastai.torch_core.ipynb",
         "ArrayImage": "02a_fastai.torch_core.ipynb",
         "ArrayImageBW": "02a_fastai.torch_core.ipynb",
         "ArrayMask": "02a_fastai.torch_core.ipynb",
         "Tensor.__array_eq__": "02a_fastai.torch_core.ipynb",
         "tensor": "02a_fastai.torch_core.ipynb",
         "set_seed": "02a_fastai.torch_core.ipynb",
         "get_random_states": "02a_fastai.torch_core.ipynb",
         "set_random_states": "02a_fastai.torch_core.ipynb",
         "no_random": "02a_fastai.torch_core.ipynb",
         "unsqueeze": "02a_fastai.torch_core.ipynb",
         "unsqueeze_": "02a_fastai.torch_core.ipynb",
         "apply": "02a_fastai.torch_core.ipynb",
         "maybe_gather": "02a_fastai.torch_core.ipynb",
         "to_detach": "02a_fastai.torch_core.ipynb",
         "to_half": "02a_fastai.torch_core.ipynb",
         "to_float": "02a_fastai.torch_core.ipynb",
         "defaults.use_cuda": "02a_fastai.torch_core.ipynb",
         "default_device": "02a_fastai.torch_core.ipynb",
         "to_device": "02a_fastai.torch_core.ipynb",
         "to_cpu": "02a_fastai.torch_core.ipynb",
         "to_np": "02a_fastai.torch_core.ipynb",
         "to_concat": "02a_fastai.torch_core.ipynb",
         "Tensor.set_meta": "02a_fastai.torch_core.ipynb",
         "TensorBase": "02a_fastai.torch_core.ipynb",
         "TensorImageBase": "02a_fastai.torch_core.ipynb",
         "TensorImage": "02a_fastai.torch_core.ipynb",
         "TensorImageBW": "02a_fastai.torch_core.ipynb",
         "TensorMask": "02a_fastai.torch_core.ipynb",
         "TensorFlowField": "02a_fastai.torch_core.ipynb",
         "TensorCategory": "02a_fastai.torch_core.ipynb",
         "TensorMultiCategory": "02a_fastai.torch_core.ipynb",
         "TitledTensorScalar": "02a_fastai.torch_core.ipynb",
         "L.tensored": "02a_fastai.torch_core.ipynb",
         "L.stack": "02a_fastai.torch_core.ipynb",
         "L.cat": "02a_fastai.torch_core.ipynb",
         "concat": "02a_fastai.torch_core.ipynb",
         "Chunks": "02a_fastai.torch_core.ipynb",
         "show_title": "02a_fastai.torch_core.ipynb",
         "ShowTitle": "02a_fastai.torch_core.ipynb",
         "TitledInt": "02a_fastai.torch_core.ipynb",
         "TitledFloat": "02a_fastai.torch_core.ipynb",
         "TitledStr": "02a_fastai.torch_core.ipynb",
         "TitledTuple": "02a_fastai.torch_core.ipynb",
         "TitledStr.truncate": "02a_fastai.torch_core.ipynb",
         "pd.DataFrame.__init__": "02a_fastai.torch_core.ipynb",
         "get_empty_df": "02a_fastai.torch_core.ipynb",
         "display_df": "02a_fastai.torch_core.ipynb",
         "get_first": "02a_fastai.torch_core.ipynb",
         "one_param": "02a_fastai.torch_core.ipynb",
         "item_find": "02a_fastai.torch_core.ipynb",
         "find_device": "02a_fastai.torch_core.ipynb",
         "find_bs": "02a_fastai.torch_core.ipynb",
         "np_func": "02a_fastai.torch_core.ipynb",
         "Module": "02a_fastai.torch_core.ipynb",
         "get_model": "02a_fastai.torch_core.ipynb",
         "one_hot": "02a_fastai.torch_core.ipynb",
         "one_hot_decode": "02a_fastai.torch_core.ipynb",
         "params": "02a_fastai.torch_core.ipynb",
         "trainable_params": "02a_fastai.torch_core.ipynb",
         "norm_types": "02a_fastai.torch_core.ipynb",
         "norm_bias_params": "02a_fastai.torch_core.ipynb",
         "batch_to_samples": "02a_fastai.torch_core.ipynb",
         "Tensor.interp_1d": "02a_fastai.torch_core.ipynb",
         "Tensor.pca": "02a_fastai.torch_core.ipynb",
         "logit": "02a_fastai.torch_core.ipynb",
         "num_distrib": "02a_fastai.torch_core.ipynb",
         "rank_distrib": "02a_fastai.torch_core.ipynb",
         "distrib_barrier": "02a_fastai.torch_core.ipynb",
         "Path.save_array": "02a_fastai.torch_core.ipynb",
         "Path.load_array": "02a_fastai.torch_core.ipynb",
         "base_doc": "02a_fastai.torch_core.ipynb",
         "doc": "02a_fastai.torch_core.ipynb",
         "nested_reorder": "02a_fastai.torch_core.ipynb",
         "make_cross_image": "02a_fastai.torch_core.ipynb",
         "show_image_batch": "02a_fastai.torch_core.ipynb",
         "requires_grad": "02a_fastai.torch_core.ipynb",
         "init_default": "02a_fastai.torch_core.ipynb",
         "cond_init": "02a_fastai.torch_core.ipynb",
         "apply_leaf": "02a_fastai.torch_core.ipynb",
         "apply_init": "02a_fastai.torch_core.ipynb",
         "script_use_ctx": "02a_fastai.torch_core.ipynb",
         "script_save_ctx": "02a_fastai.torch_core.ipynb",
         "script_fwd": "02a_fastai.torch_core.ipynb",
         "script_bwd": "02a_fastai.torch_core.ipynb",
         "grad_module": "02a_fastai.torch_core.ipynb",
         "ismin_torch": "02a_fastai.torch_core.ipynb",
         "notmax_torch": "02a_fastai.torch_core.ipynb",
         "fastai_cfg": "02b_fastai.data.external.ipynb",
         "fastai_path": "02b_fastai.data.external.ipynb",
         "URLs": "02b_fastai.data.external.ipynb",
         "untar_data": "02b_fastai.data.external.ipynb",
         "Callback": "02b_fastai.data.loop.core.ipynb",
         "dp.map.MapDataPipe.__repr__": "02b_fastai.data.loop.core.ipynb",
         "dp.map.MapDataPipe.__str__": "02b_fastai.data.loop.core.ipynb",
         "dp.iter.IterDataPipe.__repr__": "02b_fastai.data.loop.core.ipynb",
         "dp.iter.IterDataPipe.__str__": "02b_fastai.data.loop.core.ipynb",
         "dp.map.MapDataPipe.callbacks": "02b_fastai.data.loop.core.ipynb",
         "dp.iter.IterDataPipe.callbacks": "02b_fastai.data.loop.core.ipynb",
         "filter_call_on_cbs": "02b_fastai.data.loop.core.ipynb",
         "set_cbs": "02b_fastai.data.loop.core.ipynb",
         "filter_exclude_under_cbs": "02b_fastai.data.loop.core.ipynb",
         "soft_compose": "02b_fastai.data.loop.core.ipynb",
         "callback_iter": "02b_fastai.data.loop.core.ipynb",
         "callback_getitem": "02b_fastai.data.loop.core.ipynb",
         "dp.map.Batcher.__getitem__": "02b_fastai.data.loop.core.ipynb",
         "dp.iter.Batcher.__iter__": "02b_fastai.data.loop.core.ipynb",
         "default_constructor": "02b_fastai.data.loop.core.ipynb",
         "DemultiplexerMapDataPipe": "02c_fastai.data.pipes.map.demux.ipynb",
         "T_co": "02c_fastai.data.pipes.map.demux.ipynb",
         "MultiplexerMapDataPipe": "02c_fastai.data.pipes.map.mux.ipynb",
         "TypeTransformLoop": "02d_fastai.data.load.ipynb",
         "ItemTransformLoop": "02d_fastai.data.load.ipynb",
         "BatchTransformLoop": "02d_fastai.data.load.ipynb",
         "default_loader_loop": "02d_fastai.data.load.ipynb",
         "GrandparentSplitter": "02d_fastai.data.transforms.ipynb",
         "get_files": "02d_fastai.data.transforms.ipynb",
         "FileGetter": "02d_fastai.data.transforms.ipynb",
         "image_extensions": "02d_fastai.data.transforms.ipynb",
         "get_image_files": "02d_fastai.data.transforms.ipynb",
         "ImageGetter": "02d_fastai.data.transforms.ipynb",
         "get_text_files": "02d_fastai.data.transforms.ipynb",
         "ItemGetter": "02d_fastai.data.transforms.ipynb",
         "AttrGetter": "02d_fastai.data.transforms.ipynb",
         "RandomSplitter": "02d_fastai.data.transforms.ipynb",
         "TrainTestSplitter": "02d_fastai.data.transforms.ipynb",
         "IndexSplitter": "02d_fastai.data.transforms.ipynb",
         "EndSplitter": "02d_fastai.data.transforms.ipynb",
         "FuncSplitter": "02d_fastai.data.transforms.ipynb",
         "MaskSplitter": "02d_fastai.data.transforms.ipynb",
         "FileSplitter": "02d_fastai.data.transforms.ipynb",
         "ColSplitter": "02d_fastai.data.transforms.ipynb",
         "RandomSubsetSplitter": "02d_fastai.data.transforms.ipynb",
         "parent_label": "02d_fastai.data.transforms.ipynb",
         "RegexLabeller": "02d_fastai.data.transforms.ipynb",
         "ColReader": "02d_fastai.data.transforms.ipynb",
         "CategoryMap": "02d_fastai.data.transforms.ipynb",
         "Categorize": "02d_fastai.data.transforms.ipynb",
         "Category": "02d_fastai.data.transforms.ipynb",
         "MultiCategorize": "02d_fastai.data.transforms.ipynb",
         "MultiCategory": "02d_fastai.data.transforms.ipynb",
         "OneHotEncode": "02d_fastai.data.transforms.ipynb",
         "EncodedMultiCategorize": "02d_fastai.data.transforms.ipynb",
         "RegressionSetup": "02d_fastai.data.transforms.ipynb",
         "get_c": "02d_fastai.data.transforms.ipynb",
         "ToTensor": "02d_fastai.data.transforms.ipynb",
         "IntToFloatTensor": "02d_fastai.data.transforms.ipynb",
         "broadcast_vec": "02d_fastai.data.transforms.ipynb",
         "Normalize": "02d_fastai.data.transforms.ipynb",
         "Loop": "03_callback.core.ipynb",
         "defaults.loop_callbacks": "03_callback.core.ipynb",
         "LoopCallback": "03_callback.core.ipynb",
         "imagenet_stats": "03_fastrl.fastai.vision.core.ipynb",
         "cifar_stats": "03_fastrl.fastai.vision.core.ipynb",
         "mnist_stats": "03_fastrl.fastai.vision.core.ipynb",
         "n_px": "03_fastrl.fastai.vision.core.ipynb",
         "shape": "03_fastrl.fastai.vision.core.ipynb",
         "aspect": "03_fastrl.fastai.vision.core.ipynb",
         "Image.Image.reshape": "03_fastrl.fastai.vision.core.ipynb",
         "Image.Image.to_bytes_format": "03_fastrl.fastai.vision.core.ipynb",
         "Image.Image.to_thumb": "03_fastrl.fastai.vision.core.ipynb",
         "Image.Image.resize_max": "03_fastrl.fastai.vision.core.ipynb",
         "to_image": "03_fastrl.fastai.vision.core.ipynb",
         "load_image": "03_fastrl.fastai.vision.core.ipynb",
         "image2tensor": "03_fastrl.fastai.vision.core.ipynb",
         "PILBase": "03_fastrl.fastai.vision.core.ipynb",
         "PILImage": "03_fastrl.fastai.vision.core.ipynb",
         "PILImageBW": "03_fastrl.fastai.vision.core.ipynb",
         "PILMask": "03_fastrl.fastai.vision.core.ipynb",
         "OpenMask": "03_fastrl.fastai.vision.core.ipynb",
         "OpenMask.loss_func": "03_fastrl.fastai.vision.core.ipynb",
         "PILMask.create": "03_fastrl.fastai.vision.core.ipynb",
         "Agent": "04_agent.ipynb",
         "AgentCallback": "04_agent.ipynb",
         "ExperienceReplayException": "06a_memory.experience_replay.ipynb",
         "ExperienceReplay": "06a_memory.experience_replay.ipynb",
         "ExperienceReplayCallback": "06a_memory.experience_replay.ipynb",
         "snapshot_memory": "06a_memory.experience_replay.ipynb",
         "ExperienceReplayTensorboard": "06a_memory.experience_replay.ipynb",
         "create_event_accumulator": "06f_memory.tensorboard.ipynb",
         "diff_tags": "06f_memory.tensorboard.ipynb",
         "scalars2value": "06f_memory.tensorboard.ipynb",
         "scalar2line": "06f_memory.tensorboard.ipynb",
         "images2animation": "06f_memory.tensorboard.ipynb",
         "figures_to_html": "06f_memory.tensorboard.ipynb",
         "create_experience_replay_fig": "06f_memory.tensorboard.ipynb",
         "DQN": "10a_agents.dqn.core.ipynb",
         "ArgMaxFeed": "10a_agents.dqn.core.ipynb",
         "DiscreteEpsilonRandomSelect": "10a_agents.dqn.core.ipynb",
         "Epsilon": "10a_agents.dqn.core.ipynb",
         "DQNTrainer": "10a_agents.dqn.core.ipynb",
         "DQNTargetTrainer": "10b_agents.dqn.targets.ipynb",
         "DoubleDQNTrainer": "10c_agents.dqn.double.ipynb",
         "DuelingBlock": "10d_agents.dqn.dueling.ipynb",
         "DuelingDQN": "10d_agents.dqn.dueling.ipynb",
         "create_support": "10e_agents.dqn.categorical.ipynb",
         "CategoricalDQN": "10e_agents.dqn.categorical.ipynb",
         "distribute": "10e_agents.dqn.categorical.ipynb",
         "final_distribute": "10e_agents.dqn.categorical.ipynb",
         "categorical_update": "10e_agents.dqn.categorical.ipynb",
         "show_q_distribution": "10e_agents.dqn.categorical.ipynb",
         "PartialCrossEntropy": "10e_agents.dqn.categorical.ipynb",
         "CategoricalDQNTrainer": "10e_agents.dqn.categorical.ipynb",
         "CategoricalArgMaxFeed": "10e_agents.dqn.categorical.ipynb",
         "show_q": "10e_agents.dqn.categorical.ipynb",
         "show_q_and_max_distribution": "10e_agents.dqn.categorical.ipynb",
         "Critic": "11a_agents.policy_gradient.ppo.ipynb",
         "ClampBlock": "11a_agents.policy_gradient.ppo.ipynb",
         "show_multisurface": "11a_agents.policy_gradient.ppo.ipynb",
         "ConstBlock": "11a_agents.policy_gradient.ppo.ipynb",
         "clamp_or_const": "11a_agents.policy_gradient.ppo.ipynb",
         "show_surface": "11a_agents.policy_gradient.ppo.ipynb",
         "SimpleGMM": "11a_agents.policy_gradient.ppo.ipynb",
         "MultiCompGMM": "11a_agents.policy_gradient.ppo.ipynb",
         "show_install": "20_test_utils.ipynb"}

modules = ["core.py",
           "nbdev_extensions.py",
           "fastai/torch_core.py",
           "fastai/data/external.py",
           "fastai/data/loop/core.py",
           "fastai/data/pipes/map/demux.py",
           "fastai/data/pipes/map/mux.py",
           "fastai/data/load.py",
           "fastai/data/transforms.py",
           "callback/core.py",
           "fastai/vision/core.py",
           "agent.py",
           "memory/experience_replay.py",
           "memory/tensorboard.py",
           "agents/dqn/core.py",
           "agents/dqn/targets.py",
           "agents/dqn/double.py",
           "agents/dqn/dueling.py",
           "agents/dqn/categorical.py",
           "agents/policy_gradient/ppo.py",
           "test_utils.py"]

doc_url = "https://josiahls.github.io/fastrl/"

git_url = "https://github.com/josiahls/fastrl/tree/master/"

def custom_doc_links(name): return None
